{"version":3,"sources":["components/SearchBar.js","components/Header.js","templates/HomePage.js","components/SummonerNameCard.js","components/SummonerRankCard.js","components/UnrankedCard.js","components/SummonerInfo.js","components/Champion.js","components/ChampionList.js","components/Synergy.js","components/MatchHistoryCard.js","hooks/HttpRequest.js","hooks/HttpRequestDependent.js","templates/SummonerPage.js","App.js","serviceWorker.js","index.js","assets/ranks/Emblem_Gold.png"],"names":["useStyles","makeStyles","theme","form","paddingTop","paddingBottom","shadowBox","height","display","justifyContent","alignItems","button","Search","classes","useState","urlRedirect","setUrlRedirect","useForm","setValue","register","handleSubmit","errors","control","Grid","item","xs","summonername","Alert","severity","Box","className","Typography","container","direction","justify","onSubmit","data","e","toLowerCase","region","as","FormControl","variant","size","InputLabel","shrink","Select","defaultValue","name","onChange","event","target","value","map","MenuItem","key","TextField","inputRef","required","label","Button","type","color","to","title","fontSize","grey","backgroundColor","Header","AppBar","position","Link","component","RouterLink","SearchBar","HomePage","root","SummonerNameCard","props","url","profileiconid","sm","Card","CardHeader","avatar","Avatar","alt","src","subheader","summonerlevel","CardContent","SummonerRankCard","RankGold","tier","division","lp","LinearProgress","wins","losses","SummonerInfo","UnrankedCard","cardchampion","margin","width","cardicon","cardchampionicon","Champion","dic","1","brown","2","3","amber","Array","stars","idx","champkey","style","champ","items","ChampionList","units","unit","matchkey","character_id","text","textAlign","Synergy","traits","trait","i","tier_current","tier_total","color1","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","transform","MatchHistory","expanded","setExpanded","matchType","queue","level","CardActions","IconButton","clsx","onClick","alert","useFetch","error","loading","request","setRequest","useEffect","fetch","then","response","json","console","log","catch","useFetchDependent","dependent","includes","puuid","id","center","SummonerPage","useParams","summonerinfo_content","matchhistory_content","path","summoner","matchHistory","rankStats","CircularProgress","profileIconId","summonerLevel","matchhistory","length","match","MatchHistoryCard","createMuiTheme","responsiveFontSizes","App","CssBaseline","ThemeProvider","exact","Boolean","window","location","hostname","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.48bd0d02.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Button, Grid, TextField, MenuItem, FormControl, InputLabel, Select, Typography, Box } from '@material-ui/core'; \nimport SearchIcon from '@material-ui/icons/Search';\nimport Alert from '@material-ui/lab/Alert';\nimport { Redirect } from 'react-router-dom';\n\n\n\nconst useStyles =  makeStyles((theme) =>({\n  form:{\n    paddingTop: 8,\n    paddingBottom: 8*2\n  },\n  shadowBox:{\n    height: 48,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  button:{\n    height: 48\n  }\n}));\n\nfunction Search() {\n  const classes = useStyles();\n  const regions = ['na1','br1','oc1','la1','la2','jp1','kr','eun1','euw1','tr1','ru']\n  const [urlRedirect, setUrlRedirect] = useState('');\n  const { setValue, register, handleSubmit, errors, control } = useForm()\n\n  const handleChange = (event) => {\n    const { name } = event.target;\n    setValue(name, event.target.value)\n  }\n\n  const onSubmit = (data, e) => {\n    /* Update (summonername, region) */\n    const summonername = data.summonername.toLowerCase()\n    const region = data.region.toLowerCase()\n    setUrlRedirect(`/summonerstats/${region}/${summonername}`);\n  }\n\n  return (\n    <div>\n      {/* User Error Code */}\n      <Grid item xs={12}>\n        {errors.summonername && <Alert severity=\"error\">Summoner Name is required.</Alert>}\n        {!errors.summonername && \n          <Box className={classes.shadowBox}>\n            <Typography>Data-driven human learning</Typography>\n          </Box>\n        }\n      </Grid>\n      <Grid container item direction=\"row\" justify=\"center\" className={classes.form}>\n        <form onSubmit={ handleSubmit(onSubmit) }>\n          <Controller\n            as={\n              <FormControl variant=\"filled\" size=\"small\">\n                <InputLabel shrink>Region</InputLabel>\n                <Select defaultValue=\"na1\" name=\"region\" onChange={handleChange}>\n                  {regions.map((region) => <MenuItem key={region} value={region}>{region}</MenuItem>)}\n                </Select>\n              </FormControl>\n            }\n            control={control}\n            name=\"region\"\n            defaultValue=\"na1\"\n          />\n          <TextField   \n            inputRef={register({ required: true })}\n            label=\"Summoner Name\"\n            size=\"small\"\n            name=\"summonername\"\n            variant=\"filled\"\n          />\n          <Button className={classes.button} variant=\"contained\" type=\"submit\" size=\"small\" color=\"secondary\" ><SearchIcon/></Button>\n        </form>\n        { (urlRedirect !== '') && (<Redirect to={urlRedirect} />) }\n\n      </Grid>\n    </div>\n  )\n}\n\nexport default Search\n","import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { AppBar, Link, Grid, Typography } from '@material-ui/core'; \r\nimport SearchBar from '../components/SearchBar';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles =  makeStyles((theme) =>({\r\n  title:{\r\n    fontSize: 16*2,\r\n    paddingTop: 8*2,\r\n  },\r\n  grey:{\r\n    backgroundColor: \"#78909C\"\r\n  }\r\n}));\r\n\r\nfunction Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar className={classes.grey} position=\"static\">\r\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" >\r\n\r\n        {/* Home Button */}\r\n        <Grid item xs={12}>\r\n          <Typography className={classes.title}>\r\n            <Link component={RouterLink} to=\"/\">TFT-Analytics</Link>\r\n          </Typography>\r\n        </Grid>\r\n\r\n        <SearchBar />\r\n\r\n      </Grid>  {/* End of Main-Grid */}   \r\n    </AppBar>\r\n    \r\n  )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nfunction HomePage() {\r\n  return (\r\n    <div>\r\n      <h1>Welcome to TFT-Analytics</h1>\r\n      <p>We have a lot planned for this web app. Stay Tuned!</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage\r\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, CardContent, CardHeader, Typography, Avatar } from '@material-ui/core';\n\nconst useStyles =  makeStyles((theme) =>({\n  root: {\n    height: 130\n  }\n}));\n\nfunction SummonerNameCard(props) {\n  const classes = useStyles();\n  const url = `http://ddragon.leagueoflegends.com/cdn/10.12.1/img/profileicon/${props.profileiconid}.png`\n  return (\n    <Grid item xs={10} sm={5}>\n      <Card className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar alt=\"User Avatar\" src ={url}/>\n          }\n          title={props.name}\n          subheader={`Lvl ${props.summonerlevel}`}\n        />\n        <CardContent>\n          <Typography>(Extra Summoner Info)</Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n}\n\nexport default SummonerNameCard\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, CardContent, CardHeader, Avatar, LinearProgress, Typography } from '@material-ui/core';\nimport RankGold from '../assets/ranks/Emblem_Gold.png';\n\nconst useStyles =  makeStyles((theme) =>({\n  root: {\n    height: 130\n  }\n}));\n\nfunction SummonerRankCard(props) {\n  const classes = useStyles();\n  return (\n    <Grid item xs={10} sm={5}>\n      <Card className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar alt=\"Rank Gold\" src={RankGold}/>\n          }\n          title={props.tier + \" \" + props.division}\n          subheader={\n            <div>\n            <Typography>{props.lp} LP</Typography>\n            <LinearProgress variant=\"determinate\" value={props.lp}  />\n            </div>\n          }\n        />\n        <CardContent>\n          <Typography>Wins: {props.wins} Losses: {props.losses}</Typography>\n        </CardContent>\n      </Card>\n    </Grid>\n  )\n}\n\nexport default SummonerRankCard\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, CardHeader, Avatar} from '@material-ui/core';\nimport RankGold from '../assets/ranks/Emblem_Gold.png';\n\nconst useStyles =  makeStyles((theme) =>({\n  root: {\n    height: 130\n  }\n}));\n\nfunction SummonerRankCard(props) {\n  const classes = useStyles();\n  return (\n    <Grid item xs={10} sm={5}>\n      <Card className={classes.root}>\n        <CardHeader\n          avatar={\n            <Avatar alt=\"Rank Gold\" src={RankGold}/>\n          }\n          title=\"Tier\"\n          subheader=\"Unranked\"\n        />\n      </Card>\n    </Grid>\n  )\n}\n\nexport default SummonerRankCard\n","import React from 'react'\nimport { Grid } from '@material-ui/core';\nimport SummonerNameCard from '../components/SummonerNameCard';\nimport SummonerRankCard from '../components/SummonerRankCard';\nimport UnrankedCard from '../components/UnrankedCard';\n\nfunction SummonerInfo(props) {\n  return (\n    <Grid\n      container\n      item\n      direction=\"row\"\n      justify=\"space-evenly\"\n      xs={12}\n    >\n      {/* SummonerNameCard Component */}\n      <SummonerNameCard name={props.name} profileiconid={props.profileiconid} summonerlevel={props.summonerlevel} /> \n      {/* SummonerRankCard Component*/}\n      { typeof(props.tier) !== 'undefined' ? \n          <SummonerRankCard tier={props.tier} division={props.division} lp={props.lp} wins={props.wins} losses={props.losses}/> :\n          <UnrankedCard />\n      }\n    </Grid> \n  )\n}\n\nexport default SummonerInfo\n","import React from 'react'\nimport StarIcon from '@material-ui/icons/Star';\nimport { Grid, Avatar, Box } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport brown from '@material-ui/core/colors/brown';\nimport grey from '@material-ui/core/colors/grey';\nimport amber from '@material-ui/core/colors/amber';\n\n\nconst useStyles =  makeStyles((theme) =>({\n  cardchampion:{\n    margin: 0,\n    height: 80,\n    width: 50\n  },\n  cardicon:{\n    height: 15,\n    width: 15\n  },\n  cardchampionicon:{\n    height: 45,\n    width: 45\n  }\n}));\n\nfunction Champion(props) {\n  const classes = useStyles();  \n  const dic = {1: brown[800], 2: grey[800], 3: amber[800]}\n  \n  return (\n      <Box className={classes.cardchampion}>\n        {/* CHAMPION STARS */}\n        <Grid container direction=\"row\">\n          {[...Array(props.stars)].map((e, idx) => \n            <Grid key={`${props.champkey}${idx}`} item>\n              <StarIcon style={{ color: dic[props.stars]}} className={classes.cardicon} />\n            </Grid>)\n          } \n        </Grid>\n        \n        <Avatar className={classes.cardchampionicon} title={props.champ}\n          src={`http://d2tjld7v9ietdh.cloudfront.net/champs/${props.champ}.png`} />\n      \n        {/* CHAMPION ITEMS GRID */}\n        <Grid container direction=\"row\">\n          { props.items.map((item, idx) =>\n            <Grid key={`${props.champkey}${idx}`} item> \n              <Avatar\n                title={item}\n                className={classes.cardicon}              \n                src={`http://d2tjld7v9ietdh.cloudfront.net/items/${\n                  item > 9 ? \"\" + item : \"0\" + item}.png`} \n              />\n            </Grid>         \n          )}\n        </Grid>\n      </Box> \n  )\n}\n\nexport default Champion\n","import React from 'react'\nimport Champion from '../components/Champion';\nimport { Grid } from '@material-ui/core';\n\nfunction ChampionList(props) {\n  return (\n    <Grid container direction=\"row\">\n      { props.units ? props.units.map((unit, idx)=> \n        <Champion \n          key={`${props.matchkey}${idx}`} \n          champkey={`${props.matchkey}${idx}`} \n          champ={unit.character_id} \n          stars={unit.tier} \n          items={unit.items}/> )\n        : null \n      }\n    </Grid>\n  )\n}\n\nexport default ChampionList\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Avatar, Typography } from '@material-ui/core';\n\nconst useStyles =  makeStyles((theme) =>({\n  text:{\n    textAlign:'center'\n  }\n}));\n\nfunction Synergy(props) {  \n  const classes = useStyles();\n\n  return (\n    <Grid container direction=\"row\">\n      {props.traits ? props.traits.map((trait, i) => \n        <Grid item key={i}>\n          <Typography className={classes.text}>{trait.tier_current}/{trait.tier_total}</Typography>\n          <Avatar variant=\"circle\" title={trait.name}\n              src={`http://d2tjld7v9ietdh.cloudfront.net/traits/${trait.style}/${trait.name}.png`} /> \n        </Grid>) : null\n      }\n    </Grid>\n  )\n}\n\nexport default Synergy\n","import React, { useState } from 'react'\nimport clsx from 'clsx'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Card, CardContent, CardHeader, CardActions, IconButton, Typography } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport ChampionList from '../components/ChampionList';\nimport Synergy from '../components/Synergy';\n\nconst useStyles =  makeStyles((theme) =>({\n  color1:{\n    backgroundColor:'#CFD8DC',\n  },\n  expand:{\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen:{\n    transform: 'rotate(180deg)'\n  }\n}));\n\nfunction MatchHistory(props) {\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n  const handleExpandClick = () => {\n    alert(`${expanded} -> ${!expanded}`)\n    setExpanded(!expanded);\n  }\n\n  let matchType = ''\n  if (props.queue === 1090){\n    matchType=\"Normal\"\n  }else if (props.queue === 1100){\n    matchType=\"Ranked\"\n  }\n  \n  return (\n    <Grid container item justify=\"center\">\n      <Grid item xs={11}>\n        <Card className={classes.color1}>\n          <CardHeader \n            title={`#${props.position}`} \n            subheader={\n              <div>\n                <Typography>{matchType}</Typography>\n                <Typography>Lvl {props.level}</Typography>\n              </div>\n            }\n          />\n          <CardContent>\n            <Synergy traits={props.traits}/>       {/* Synergy Component */}\n            <ChampionList key={props.matchkey} matchkey={props.matchkey} units={props.units} /> {/* ChampionList Component */}\n          </CardContent>\n          <CardActions>\n            <IconButton \n              className={\n                clsx(classes.expand, {[classes.expandOpen]: expanded,})\n              } \n              onClick={handleExpandClick}>\n              <ExpandMoreIcon/>\n            </IconButton>\n          </CardActions>\n        </Card>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default MatchHistory\n","import { useState, useEffect } from 'react'\n\nfunction useFetch(url) {\n  const [request, setRequest] = useState({\n    data: null,\n    error: null,\n    loading: false\n  })            \n\n  /* Gets called whenever [summonerInfo] is updated */\n  useEffect(()=>{    \n    /* Reset */\n    setRequest({\n      data: null,\n      error: null,\n      loading: true\n    })\n\n    fetch(url)\n    .then(response => {return response.json()})\n    .then(data => {\n      console.log(`Successfully Retrieved data: ${data}`)\n      setRequest({\n        data: data,\n        error: null,\n        loading: false\n      })\n    })\n    .catch(error => {\n      // Resource not found\n      console.log(`Failed to Retrieve data: ${error}`)\n      setRequest({\n        data: null,\n        error: error,\n        loading: false\n      });\n    })\n\n  }, [url])\n\n  return request\n}\n\nexport default useFetch\n","import { useState, useEffect } from 'react'\n\nfunction useFetchDependent(url, dependent) {\n  \n  const [request, setRequest] = useState({\n    data: null,\n    error: null,\n    loading: false\n  })            \n\n  /* Gets called whenever [summonerInfo] is updated */\n  useEffect(()=>{    \n\n    /* MatchHistory Fetch */\n    if (dependent.data && url.includes('/matchhistory')){\n      console.log(dependent.data)\n      /* Reset */\n      setRequest({\n        data: null,\n        error: null,\n        loading: true\n      })\n\n      fetch(`${url}${dependent.data.puuid}`)\n      .then(response => {return response.json()})\n      .then(data => {\n        console.log(`Successfully Retrieved data: ${data}`)\n        setRequest({\n          data: data,\n          error: null,\n          loading: false\n        })\n      })\n      .catch(error => {\n        // Resource not found\n        console.log(`Failed to Retrieve data: ${error}`)\n        setRequest({\n          data: null,\n          error: error,\n          loading: false\n        });\n      })\n    }\n    \n    /* RankStats Fetch */\n    if (dependent.data && url.includes('/rankinfo')){\n      /* Reset */\n      setRequest({\n        data: null,\n        error: null,\n        loading: true\n      })\n      fetch(`${url}${dependent.data.id}`)\n      .then(response => {return response.json()})\n      .then(data => {\n        console.log(`Successfully Retrieved data: ${data}`)\n        setRequest({\n          data: data,\n          error: null,\n          loading: false\n        })\n      })\n      .catch(error => {\n        // Resource not found\n        console.log(`Failed to Retrieve data: ${error}`)\n        setRequest({\n          data: null,\n          error: error,\n          loading: false\n        });\n      })\n    }\n    \n\n  }, [dependent, url])\n\n  return request\n}\n\nexport default useFetchDependent\n","import React from 'react';   \nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, CircularProgress, Typography } from '@material-ui/core';\nimport SummonerInfo from '../components/SummonerInfo';\nimport MatchHistoryCard from '../components/MatchHistoryCard';\nimport { useParams } from 'react-router-dom';\nimport useFetch from '../hooks/HttpRequest';\nimport useFetchDependent from '../hooks/HttpRequestDependent';\n\nconst useStyles =  makeStyles((theme) =>({\n  root: {\n    paddingTop: 8*3\n  },\n  center:{\n    display: 'flex',\n    justifyContent: 'center',\n    paddingTop: 8*3\n  },\n}));\n\nfunction SummonerPage() {\n  const classes = useStyles();\n  const { summonername, region } = useParams()\n  const root =`http://localhost:8000/api`;\n\n  /* Determine what to display */\n  let summonerinfo_content = null\n  let matchhistory_content = null\n\n  /* summoner Fetch */\n  let path = `/${region}/${summonername}`;\n  let urlSummoner = root + \"/summonerinfo\" + path;\n  const summoner = useFetch(urlSummoner)\n  \n  /* \n    matchHistory Fetch (Dependent Fetch on summoner Fetch)\n      [ {units:[], traits:[], position, level, queue} ,... ]\n  */\n  path = `/${region}/`\n  let urlMatchHistory = root + \"/matchhistory\" + path;\n  const matchHistory = useFetchDependent(urlMatchHistory, summoner)\n\n  /* rankStats Fetch (Dependent Fetch on summoner Fetch) */\n  let urlRank = root + \"/rankinfo\" + path;\n  let rankStats = useFetchDependent(urlRank, summoner);\n\n  // State 0: Loading TODO: Can split loading into each section\n  if (summoner.loading || rankStats.loading){\n    summonerinfo_content = (\n      <Grid item className={classes.center}>\n        <CircularProgress />\n      </Grid>\n    )\n  } \n  if (matchHistory.loading){\n    matchhistory_content = (\n      <Grid item className={classes.center}>\n        <CircularProgress />\n      </Grid>\n    )\n  }\n\n  // State 1: Successful Fetches\n  if (summoner.data && rankStats.data){\n    const { name, profileIconId, summonerLevel } = summoner.data\n    const { division='', losses=0, wins=0, lp=0, tier='unranked' } = rankStats.data\n\n    summonerinfo_content = (\n      <Grid item xs={12}>\n        <SummonerInfo name={name} profileiconid={profileIconId} summonerlevel={summonerLevel} tier={tier} division={division} lp={lp} wins={wins} losses={losses} />\n      </Grid> \n    )\n  }\n  if (matchHistory.data){\n    const { matchhistory } = matchHistory.data\n\n    matchhistory_content = (\n      <Grid item xs={12}>\n        { matchhistory.length > 0 ? matchhistory.map((match,idx) => \n          <MatchHistoryCard key={`match${idx}`} matchkey={`match${idx}`} units={match.units} traits={match.traits} position={match.position} level={match.level} queue={match.queue}/>) : \n          <Typography className={classes.center}>No Matches Found</Typography> \n        }\n      </Grid>  \n    )\n    \n  }\n\n  // State 2: Resource Not Found => Display error\n  if (summoner.error){\n    summonerinfo_content = (\n      <Grid item>\n        <h1>Not found</h1>\n      </Grid>\n    )\n    matchhistory_content = null\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container direction=\"column\" justify=\"center\" >\n        {summonerinfo_content}\n        {matchhistory_content}\n      </Grid>\n    </div>\n  );\n}\n\nexport default SummonerPage;","import React from 'react';\r\nimport './App.css';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { createMuiTheme, ThemeProvider , responsiveFontSizes } from '@material-ui/core/styles';\r\n/* Static Components */\r\nimport Header from './components/Header'\r\n/* Dynamic Components */\r\nimport HomePage from './templates/HomePage'\r\nimport SummonerPage from './templates/SummonerPage'\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <CssBaseline/>\r\n      <ThemeProvider theme={theme}>\r\n      <Router>\r\n          <Header/> \r\n            <Switch>\r\n              <Route exact path=\"/\" component={HomePage} />\r\n              <Route exact path=\"/summonerstats/:region/:summonername\" component={SummonerPage} />\r\n            </Switch>\r\n      </Router>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.Fragment>\r\n    <App />\r\n  </React.Fragment>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/Emblem_Gold.19be519b.png\";"],"sourceRoot":""}